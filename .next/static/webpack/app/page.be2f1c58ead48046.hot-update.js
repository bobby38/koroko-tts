"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/utils/db.ts":
/*!*************************!*\
  !*** ./src/utils/db.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearHistory: function() { return /* binding */ clearHistory; },\n/* harmony export */   getAllHistory: function() { return /* binding */ getAllHistory; },\n/* harmony export */   getHistoryItem: function() { return /* binding */ getHistoryItem; },\n/* harmony export */   initDB: function() { return /* binding */ initDB; },\n/* harmony export */   saveAudio: function() { return /* binding */ saveAudio; }\n/* harmony export */ });\nconst DB_NAME = \"tts-history\";\nconst DB_VERSION = 1;\nconst HISTORY_STORE = \"history\";\nconst AUDIO_STORE = \"audio\";\nlet db = null;\n// Initialize IndexedDB\nasync function initDB() {\n    if (db) return db;\n    return new Promise((resolve, reject)=>{\n        const request = indexedDB.open(DB_NAME, DB_VERSION);\n        request.onerror = ()=>reject(request.error);\n        request.onsuccess = ()=>{\n            db = request.result;\n            resolve(request.result);\n        };\n        request.onupgradeneeded = (event)=>{\n            const db = event.target.result;\n            // Create history store\n            if (!db.objectStoreNames.contains(HISTORY_STORE)) {\n                db.createObjectStore(HISTORY_STORE, {\n                    keyPath: \"id\"\n                });\n            }\n            // Create audio store\n            if (!db.objectStoreNames.contains(AUDIO_STORE)) {\n                db.createObjectStore(AUDIO_STORE, {\n                    keyPath: \"id\"\n                });\n            }\n        };\n    });\n}\n// Save audio data to IndexedDB\nasync function saveAudio(item, audioData) {\n    const db = await initDB();\n    return new Promise((resolve, reject)=>{\n        try {\n            const transaction = db.transaction([\n                HISTORY_STORE,\n                AUDIO_STORE\n            ], \"readwrite\");\n            // Save history item\n            const historyStore = transaction.objectStore(HISTORY_STORE);\n            historyStore.put(item);\n            // Save audio data\n            const audioStore = transaction.objectStore(AUDIO_STORE);\n            audioStore.put({\n                id: item.id,\n                audioData: audioData,\n                timestamp: Date.now()\n            });\n            transaction.oncomplete = ()=>resolve();\n            transaction.onerror = ()=>reject(transaction.error);\n        } catch (error) {\n            reject(error);\n        }\n    });\n}\n// Get history item with audio data\nasync function getHistoryItem(id) {\n    const db = await initDB();\n    return new Promise((resolve, reject)=>{\n        try {\n            const transaction = db.transaction(AUDIO_STORE, \"readonly\");\n            const store = transaction.objectStore(AUDIO_STORE);\n            const request = store.get(id);\n            request.onsuccess = ()=>resolve(request.result);\n            request.onerror = ()=>reject(request.error);\n        } catch (error) {\n            reject(error);\n        }\n    });\n}\n// Get all history items\nasync function getAllHistory() {\n    const db = await initDB();\n    return new Promise((resolve, reject)=>{\n        try {\n            const transaction = db.transaction(HISTORY_STORE, \"readonly\");\n            const store = transaction.objectStore(HISTORY_STORE);\n            const request = store.getAll();\n            request.onsuccess = ()=>resolve(request.result);\n            request.onerror = ()=>reject(request.error);\n        } catch (error) {\n            reject(error);\n        }\n    });\n}\n// Clear all history items\nasync function clearHistory() {\n    const db = await initDB();\n    return new Promise((resolve, reject)=>{\n        try {\n            const transaction = db.transaction([\n                HISTORY_STORE,\n                AUDIO_STORE\n            ], \"readwrite\");\n            // Clear history store\n            const historyStore = transaction.objectStore(HISTORY_STORE);\n            historyStore.clear();\n            // Clear audio store\n            const audioStore = transaction.objectStore(AUDIO_STORE);\n            audioStore.clear();\n            transaction.oncomplete = ()=>resolve();\n            transaction.onerror = ()=>reject(transaction.error);\n        } catch (error) {\n            reject(error);\n        }\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/db.ts\n"));

/***/ })

});